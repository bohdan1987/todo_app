# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno and run tests across stable and canary builds on Windows, Ubuntu and macOS.
# For more information see: https://github.com/denoland/setup-deno

name: CI-CD-pipeline-to-AWS-ElastickBeanstalk
env:
  EB_PAKAGE_S3_BUCKET_NAME : "tolik-todo-app"
  EB_APPLICATION_NAME      : "Mytodo"
  EB_ENVIRONMENT_NAME      : "Mytodo-env"
  DEPLOY_PAKAGE_NAME       : "todo_app_${{ github.sha }}.zip"
  AWS_REGION_NAME          : "eu-central-1"

on:
  push:
    branches: 
    - master
  
jobs:
  my_ci_part:
      runs-on: ubuntu-latest


      steps:
      - name: Git clone our repo
        uses: actions/checkout@v1


      - name: Create zip deployment pakage
        run : zip -r ${{ env.DEPLOY_PAKAGE_NAME }} ./ -x *.git*
  
  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
        
          aws-access-key-id     : ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key : ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region            : ${{ env.AWS_REGION_NAME }}
         
      - name: Copy deployment pakage to S3 buket
        run : aws s3 cp ${{ env.DEPLOY_PAKAGE_NAME }}  s3://${{ env.EB_PAKAGE_S3_BUCKET_NAME }}
        
      - name: Print Happy message for ci finish
        run : echo "Ci pipeline part Finished sucseefully"
        
  my_cd_part:
     runs-on: ubuntu-latest
     needs: [my_ci_part]
         
     steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
        
          aws-access-key-id     : ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key : ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region            : ${{ env.AWS_REGION_NAME }}
          
      - name: Create new ElasticBeantalk Application
        run : |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PAKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PAKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
          
          
      - name: Deploy new ElasticBeanstalk Aplication Version
        run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label
        
        
      - name: Print Happy message for cd finish
        run : echo "Cd pipeline part Finished sucseefully"
           
           
      
      
        
       
